- name: Deploy Docker Stack
  hosts: swarm_manager
  become: yes
  vars:
    destination_directory: /ai-tools
  tasks:
    - name: Retrieve environment file from Vault
      set_fact: 
        env_file : "{{ lookup('hashi_vault', 'secret=secret/data/config token={{ VAULT_TOKEN }} url={{ VAULT_ADDR }}') }}"
      changed_when: false
      args:
        chdir: "{{ destination_directory }}"
      environment:
        VAULT_ADDR: "{{ VAULT_ADDR }}"
        VAULT_TOKEN: "{{ VAULT_TOKEN }}"
  
    - name: Fetch GitHub Details from Vault
      set_fact: 
        Github: "{{ lookup('hashi_vault', 'secret=secret/data/github token={{ VAULT_TOKEN }} url={{ VAULT_ADDR }}') }}"
      changed_when: false
      environment:
        VAULT_ADDR: "{{ VAULT_ADDR }}"
        VAULT_TOKEN: "{{ VAULT_TOKEN }}"

    - name: Authenticate with GitHub Container Registry
      docker_login:
        registry_url: docker.pkg.github.com
        username: "{{ Github.username }}"
        password: "{{ Github.PAT }}"
        reauthorize: yes

    - name: Download Files
      shell:
        curl -o ./config.json -L https://raw.githubusercontent.com/Samagra-Development/ai-tools/restructure/config.json
        curl -o generate_independent_docker.sh -LJO https://raw.githubusercontent.com/Samagra-Development/ai-tools/restructure/generate_independent_docker.sh
        curl -o env_template.j2 -LJO https://raw.githubusercontent.com/Samagra-Development/ai-tools/restructure/env_template.j2
      args:
        chdir: "{{ destination_directory }}"
    
    - name: Generate sample_file.env from Vault data
      template:
        src: "{{ destination_directory }}/env_template.j2"
        dest: "{{ destination_directory }}/sample_file.env"
      vars:
        env_file: "{{ env_file }}"

    - name: Run commands in the cloned directory
      shell: ./generate_independent_docker.sh
      args:
        chdir: "{{ destination_directory }}"
      become_user: root
      become: yes
      become_method: sudo
      vars:
        ansible_ssh_common_args: '-o StrictHostKeyChecking=no'
    
    - name: Convert Docker Compose to Docker Stack
      command: docker stack deploy -c ./docker-compose-independent-generated.yaml ansible_stack
      become_user: "{{ ansible_user }}"
      environment: './sample_file.env'
      args:
        chdir: "{{ destination_directory }}"