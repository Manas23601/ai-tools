- name: Deploy Docker Stack
  hosts: swarm_manager
  become: yes
  vars:
    destination_directory: /ai-tools/
  tasks:
    - name: Retrieve environment file from Vault
      shell: "lookup('hashi_vault', 'secret=secret/config token={{ VAULT_TOKEN }} url={{ VAULT_ADDR }}')"
      register: secret_result
      changed_when: false
      args:
        chdir: "{{ destination_directory }}"
      environment:
        VAULT_ADDR: "{{ vault_address }}"
        VAULT_TOKEN: "{{ vault_token }}"

    - name: Parse environment file
      set_fact:
        env_file: "{{ secret_result.stdout | from_yaml }}"
    
    - name: Generate sample_file.env from Vault data
      template:
        src: templates/sample_file.env.j2
        dest: "{{ destination_directory }}/sample_file.env"
      vars:
        env_file: "{{ env_file }}"

    - name: Fetch GitHub repository from Vault
      shell: "lookup('hashi_vault', 'secret=secret/github token={{ VAULT_TOKEN }} url={{ VAULT_ADDR }}')"
      register: github
      changed_when: false
      environment:
        VAULT_ADDR: "{{ vault_address }}"
        VAULT_TOKEN: "{{ vault_token }}"

    - name: Authenticate with GitHub Container Registry
      docker_login:
        registry_url: ghcr.io
        username: "{{ github.stdout | from_json | .github_repo }}"
        password: "{{ github.stdout | from_json | .github_PAT }}"
        reauthorize: yes

    - name: Download Files
      shell:
        curl -o ./config.json -L https://raw.githubusercontent.com/Samagra-Development/ai-tools/restructure/config.json
        curl -o ./generate_independent_docker.sh -L https://raw.githubusercontent.com/Samagra-Development/ai-tools/restructure/generate_independent_docker.sh
      args:
        chdir: "{{ destination_directory }}"

    - name: Run commands in the cloned directory
      shell:     
        ./generate_independent_docker.sh
      args:
        chdir: "{{ destination_directory }}"
      become_user: root
      become: yes
      become_method: sudo
      vars:
        ansible_ssh_common_args: '-o StrictHostKeyChecking=no'
    
    - name: Convert Docker Compose to Docker Stack
      command: docker stack deploy -c ./docker-compose-independent-generated.yaml ansible_stack
      become_user: "{{ ansible_user }}"
      environment: './sample_file.env'
      args:
        chdir: "{{ destination_directory }}"